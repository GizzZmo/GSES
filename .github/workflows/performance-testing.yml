---
name: Performance Testing & Benchmarking

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Weekly performance tests on Saturdays at 3 AM UTC
    - cron: '0 3 * * 6'
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of performance test to run'
        required: true
        default: 'basic'
        type: choice
        options:
          - basic
          - comprehensive
          - stress

jobs:
  # Basic performance tests
  basic-performance-tests:
    name: Basic Performance Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.86.0"

      - name: Install Sui CLI
        run: |
          cargo install --locked --git https://github.com/MystenLabs/sui.git --tag "testnet-v1.48.1" sui
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Performance Test - Build Time
        run: |
          echo "# Performance Test Results - $(date)" > performance-report.md
          echo "" >> performance-report.md
          echo "## Build Performance" >> performance-report.md
          
          start_time=$(date +%s)
          if sui move build --path .; then
            end_time=$(date +%s)
            build_time=$((end_time - start_time))
            echo "- **Build Time:** ${build_time} seconds ✅" >> performance-report.md
          else
            echo "- **Build:** Failed ❌" >> performance-report.md
          fi

      - name: Performance Test - Test Execution
        run: |
          echo "" >> performance-report.md
          echo "## Test Performance" >> performance-report.md
          
          start_time=$(date +%s)
          if sui move test --path .; then
            end_time=$(date +%s)
            test_time=$((end_time - start_time))
            echo "- **Test Execution Time:** ${test_time} seconds ✅" >> performance-report.md
          else
            echo "- **Tests:** Failed ❌" >> performance-report.md
          fi

      - name: Analyze Code Complexity
        run: |
          echo "" >> performance-report.md
          echo "## Code Complexity Analysis" >> performance-report.md
          
          # Count lines of code
          total_lines=$(find . -name "*.move" -not -path "./build/*" -exec wc -l {} + | tail -1 | awk '{print $1}')
          echo "- **Total Lines of Move Code:** $total_lines" >> performance-report.md
          
          # Count functions
          total_functions=$(find . -name "*.move" -not -path "./build/*" -exec grep -c "fun " {} + | awk '{s+=$1} END {print s+0}')
          echo "- **Total Functions:** $total_functions" >> performance-report.md
          
          # Calculate average function size
          if [ "$total_functions" -gt 0 ]; then
            avg_function_size=$((total_lines / total_functions))
            echo "- **Average Function Size:** ${avg_function_size} lines" >> performance-report.md
          fi

      - name: Memory Usage Analysis
        run: |
          echo "" >> performance-report.md
          echo "## Resource Usage" >> performance-report.md
          
          # Check file sizes
          echo "### File Sizes" >> performance-report.md
          find . -name "*.move" -not -path "./build/*" -exec ls -lh {} + | while read line; do
            size=$(echo "$line" | awk '{print $5}')
            file=$(echo "$line" | awk '{print $9}')
            echo "- $file: $size" >> performance-report.md
          done

      - name: Upload Performance Report
        uses: actions/upload-artifact@v3
        with:
          name: performance-report-${{ github.sha }}
          path: performance-report.md
          retention-days: 30

  # Benchmark comparison
  benchmark-comparison:
    name: Benchmark Comparison
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.86.0"

      - name: Install Sui CLI
        run: |
          cargo install --locked --git https://github.com/MystenLabs/sui.git --tag "testnet-v1.48.1" sui
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Benchmark Current PR
        run: |
          echo "# Benchmark Comparison - PR #${{ github.event.number }}" > benchmark-comparison.md
          echo "Generated on: $(date)" >> benchmark-comparison.md
          echo "" >> benchmark-comparison.md
          
          echo "## Current PR Performance" >> benchmark-comparison.md
          start_time=$(date +%s)
          if sui move build --path .; then
            end_time=$(date +%s)
            pr_build_time=$((end_time - start_time))
            echo "- **Build Time:** ${pr_build_time}s" >> benchmark-comparison.md
          fi
          
          start_time=$(date +%s)
          if sui move test --path .; then
            end_time=$(date +%s)
            pr_test_time=$((end_time - start_time))
            echo "- **Test Time:** ${pr_test_time}s" >> benchmark-comparison.md
          fi

      - name: Generate Benchmark Summary
        run: |
          echo "" >> benchmark-comparison.md
          echo "## Summary" >> benchmark-comparison.md
          echo "- Performance metrics collected for this PR" >> benchmark-comparison.md
          echo "- Compare with baseline measurements from main branch" >> benchmark-comparison.md
          echo "- Monitor for significant performance regressions" >> benchmark-comparison.md

      - name: Upload Benchmark Report
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-comparison-${{ github.sha }}
          path: benchmark-comparison.md
          retention-days: 30

  # Stress testing (only on schedule or manual trigger)
  stress-testing:
    name: Stress Testing
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.test_type == 'stress')

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "1.86.0"

      - name: Install Sui CLI
        run: |
          cargo install --locked --git https://github.com/MystenLabs/sui.git --tag "testnet-v1.48.1" sui
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Stress Test - Multiple Builds
        run: |
          echo "# Stress Test Results - $(date)" > stress-test-report.md
          echo "" >> stress-test-report.md
          echo "## Multiple Build Test" >> stress-test-report.md
          
          total_time=0
          successful_builds=0
          
          for i in {1..5}; do
            echo "Running build $i..."
            start_time=$(date +%s)
            if sui move build --path .; then
              end_time=$(date +%s)
              build_time=$((end_time - start_time))
              total_time=$((total_time + build_time))
              successful_builds=$((successful_builds + 1))
              echo "- **Build $i:** ${build_time}s ✅" >> stress-test-report.md
            else
              echo "- **Build $i:** Failed ❌" >> stress-test-report.md
            fi
          done
          
          if [ "$successful_builds" -gt 0 ]; then
            avg_time=$((total_time / successful_builds))
            echo "- **Average Build Time:** ${avg_time}s" >> stress-test-report.md
          fi
          echo "- **Success Rate:** ${successful_builds}/5" >> stress-test-report.md

      - name: Upload Stress Test Report
        uses: actions/upload-artifact@v3
        with:
          name: stress-test-report-${{ github.sha }}
          path: stress-test-report.md
          retention-days: 30